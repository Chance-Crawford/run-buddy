

/* the universal selector, 
and it sets a style for all of the elements 
of an HTML page. */
* {
    /* browsers put padding and margin on many elements by default,
    this takes all of that off at the beginning */
    margin: 0;
    padding: 0;

    /* The border-box value calculates the height and 
    width of the element
     by including the border and padding additions 
     to the content box. Helps keep content from going
     off the screen*/
    box-sizing: border-box;
}


body {
    color: #39a6b2;
    font-family: Helvetica, Arial, sans-serif;
    
}

header {
    /* padding top bottom, left right */
    padding: 20px 35px;
    background-color: #39a6b2;
}

header h1 {
    font-weight: bold;
    font-size: 36px;
    color: #fce138;
    margin: 0;
    display: inline;
}

header a {
    text-decoration: none;
    color: #fce138;
}

header nav {
    float: right;
    margin: 7px 0;
}

header nav ul li {
    display: inline;
}

header nav ul li a {
    margin: 0 30px;
    font-weight: lighter;
    font-size: 22px;
}

footer {
    background: #fce138;
    width: 100%;
    padding: 40px 35px;
}

footer h2 {
    display: inline;
    color: #024e76;
    font-size: 30px;
    margin: 0;
}

footer div {
    float: right;
    /* vertical space between lines of text */
    line-height: 1.5; 
    text-align: right;
}

footer a {
    color: #024e76;
}

section {
    padding: 60px;
}

/* Hero style start */
.hero {
    /* 
        The height property fixed at 600px gives an exact size 
        of the section, which is important in this context to allow 
        room for the sign-up form.
    */
    height: 600px;
    /* 
        hero/jumbotron banner background. 
        uses the CSS function url() to link a resource such as an image, 
        web font, or GIF. Here we're using a relative URL path to select 
        a background image.
    */
    background-image: url(../images/hero-bg.jpg); 
    /* 
        The background-size property can set the size of the background 
        image to its original size or make it stretched, repeated, 
        or constrained to fit the available space. 
        In this case, we'll set it to cover to shrink the image so that parts
        of it won't get clipped.
    */
    background-size: cover;
    /* 
        The background-position property can set the initial position of 
        the background image. We'll set this position to center.
    */
    background-position: center;

    /* 
    To enable the absolute positioning of the form container to be taken 
    relative to the hero section, we need to make the hero section's 
    position relative.
    */

    position: relative;
}
/* Hero styloe end */

.hero-form {
    color: #024e76;
    background-color: #fce138;
    width: 500px;
    /* The padding property creates an inner margin within the border. */
    padding: 20px;
    border: solid 3px #024e76;

    /* 
    If we choose relative, we'd need to move the form container from its 
    current position and offset it from the left and top positions until we 
    found the correct spot according to the mock-up. But if we choose absolute, 
    we can use the parent container's margins to offset horizontally or vertically. 
    We'll use this option because the position of the form container is in 
    relation to the hero container.

    Let's start by assuming we'd like to offset the form container from 
    the bottom and right margins of the hero section (because the form 
    container will reside in the bottom right quadrant of the hero section).
    Then we add pixels to offset it away from the bottom right.
    */
    
    position: absolute;
    bottom: 120px;
    right: 140px;
}

/* Targets "Get started today" */
.hero-form h3 {
    font-size: 24px;
    margin: 0;
}

/* everything separated by p tags in hero form, adds more top and bottom 
space between them */
.hero-form p {
    margin: 5px 0 15px 0;
}

/* Affect the first 3 input boxes on the form */
.form-input {
    font-size: 16px;
    border: 1px solid #024e76;
    /* one on each line */
    display: block;
    /* give the box more space padding inside */
    padding: 7px 15px;
    color: #024e76;
    /* Increases space between input box to element below it, also 
    increases parent's box size */
    margin-bottom: 15px;
    /* the inputs inherit margin from "section" selector above, thats why they dont
    touch the sides of the box when width = 100%. width percentage is 
    relative to the parent container's size */
    width: 100%;

}

/* labels above input fields in the form */
.hero-form label {
    margin: 0 5px;
}

/* Get running submit button */
.hero-form button {
    background-color: #024e76;
    color: #fce138;
    border: none;
    padding: 10px 20px;
    font-size: 16px;
}

/* what we do section */
.intro {
    text-align: center;
}

.intro h2 {
    font-size: 55px;
    color: #024e76;
    margin-bottom: 35px;
    padding: 0 100px 20px 100px;
    border-bottom: 3px solid #fce138;
    /* We chose to use the inline-block value instead of the inline 
    value so it can have the best of both worlds. It's now an inline element, 
    but things like padding still behave like they would on block elements. 
    Coupled with the text-align property from before, we now have a 
    center-aligned heading with an appropriately sized bottom border that 
    doesnt take up the whole width*/
    display: inline-block;

}

.intro p {
  line-height: 1.7;
  color: #39a6b2;
  width: 80%;
  font-size: 20px;
  /* centers an element with a width less than 100% 
  automatically on the left and right. Essentially, it tells the 
  browser to calculate the margins for us. When the browser is asked 
  to do this on both sides of an element, it will do its best to make 
  them even, thus pushing the element into the center. */
  margin: 0 auto;
}